apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: business-apps-multi-env
  namespace: argocd
  labels:
    type: business-applications
spec:
  generators:
  # List generator for environments and applications
  - list:
      elements:
      # Development environment
      - environment: dev
        project: dev-project
        namespace: business-apps-dev
        server: https://kubernetes.default.svc
        app: webapp
        chartVersion: "1.0.9"
        replicas: "2"
        domain: webapp-dev.devkuban.com
      
      # UAT environment
      - environment: uat
        project: uat-project
        namespace: business-apps-uat
        server: https://kubernetes.default.svc
        app: webapp
        chartVersion: "1.0.9"
        replicas: "3"
        domain: webapp-uat.devkuban.com
      
      # Production environment
      - environment: prod
        project: prod-project
        namespace: business-apps-prod
        server: https://kubernetes.default.svc
        app: webapp
        chartVersion: "1.0.9"
        replicas: "5"
        domain: webapp.devkuban.com

  template:
    metadata:
      name: '{{app}}-{{environment}}'
      labels:
        app: '{{app}}'
        environment: '{{environment}}'
        team: business
        chart-version: '{{chartVersion}}'
    spec:
      project: '{{project}}'
      source:
        repoURL: http://s3.devkuban.com/helm-charts
        chart: '{{app}}'
        targetRevision: '{{chartVersion}}'
        helm:
          # Use values files specific to each environment
          valueFiles:
          - $values/environments/{{environment}}/{{app}}-values.yaml
          values: |
            global:
              environment: {{environment}}
              cluster: {{environment}}-cluster
            
            replicaCount: {{replicas}}
            
            image:
              repository: nginx
              pullPolicy: IfNotPresent
              tag: "1.21-alpine"
            
            ingress:
              hosts:
                - host: {{domain}}
                  paths:
                    - path: /
                      pathType: Prefix

      destination:
        server: '{{server}}'
        namespace: '{{namespace}}'
        
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - RespectIgnoreDifferences=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
            
      ignoreDifferences:
        - group: ""
          kind: "Service"
          jsonPointers:
            - /spec/clusterIP
        - group: "apps"
          kind: "Deployment"
          jsonPointers:
            - /spec/replicas
          managedFieldsManagers:
            - kube-controller-manager
